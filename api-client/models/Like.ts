/* tslint:disable */
/* eslint-disable */
/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Like
 */
export interface Like {
    /**
     * 
     * @type {number}
     * @memberof Like
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Like
     */
    userId: number;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    likableType: string;
    /**
     * 
     * @type {number}
     * @memberof Like
     */
    likableId: number;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the Like interface.
 */
export function instanceOfLike(value: object): value is Like {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('likableType' in value) || value['likableType'] === undefined) return false;
    if (!('likableId' in value) || value['likableId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function LikeFromJSON(json: any): Like {
    return LikeFromJSONTyped(json, false);
}

export function LikeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Like {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['user_id'],
        'likableType': json['likable_type'],
        'likableId': json['likable_id'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
    };
}

export function LikeToJSON(json: any): Like {
    return LikeToJSONTyped(json, false);
}

export function LikeToJSONTyped(value?: Like | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'likable_type': value['likableType'],
        'likable_id': value['likableId'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

